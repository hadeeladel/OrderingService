// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.DataContext.SqlServer;

#nullable disable

namespace Ordering.Server.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20231129212328_fixkeys1")]
    partial class fixkeys1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Store.EntityModels.SqlServer.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Store.EntityModels.SqlServer.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("availableInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 4,
                            Price = 20.0,
                            ProductName = "jeans",
                            availableInStock = 30
                        },
                        new
                        {
                            ProductId = 1,
                            Price = 5.0,
                            ProductName = "socks",
                            availableInStock = 30
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 32.0,
                            ProductName = "dress",
                            availableInStock = 30
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 32.0,
                            ProductName = "shirt",
                            availableInStock = 30
                        });
                });

            modelBuilder.Entity("Store.EntityModels.SqlServer.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<double>("UserWallet")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserWallet = 200.0,
                            Username = "X"
                        },
                        new
                        {
                            UserId = 2,
                            UserWallet = 300.0,
                            Username = "Y"
                        },
                        new
                        {
                            UserId = 3,
                            UserWallet = 120.0,
                            Username = "Z"
                        });
                });

            modelBuilder.Entity("Store.EntityModels.SqlServer.Order", b =>
                {
                    b.HasOne("Store.EntityModels.SqlServer.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.EntityModels.SqlServer.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
